{"version":3,"sources":["components/List.js","components/Input.js","components/TodoList.js","index.js"],"names":["List","arr1","this","props","todos","filter","item","done","arr2","length","renderTodos","Component","Input","input","focus","className","htmlFor","id","type","ref","inp","onChange","handleChange","value","inpValue","onClick","handleClick","TodoList","e","setState","target","state","title","delete","idx","index","toggle","newTodos","JSON","parse","stringify","map","todo","checked","dangerouslySetInnerHTML","__html","localStorage","getItem","setItem","ReactDOM","render","document","getElementById"],"mappings":"6KACqBA,E,uKAEjB,IAAIC,EAAKC,KAAKC,MAAMC,MAAMC,QAAO,SAACC,GAChC,OAAOA,EAAKC,QAEVC,EAAKN,KAAKC,MAAMC,MAAMC,QAAO,SAACC,GAChC,OAAQA,EAAKC,QAEf,OACE,6BACE,uDAASC,EAAKC,QACd,4BAEIP,KAAKC,MAAMO,aAAY,IAG3B,uDAAST,EAAKQ,QACd,4BAEIP,KAAKC,MAAMO,aAAY,S,GAnBDC,aCCbC,E,kLAEbV,KAAKW,MAAMC,U,+BAEL,IAAD,OACL,OACI,yBAAKC,UAAY,OACjB,2BAAOC,QAAQ,OAAf,YACA,2BAAOC,GAAG,MAAMC,KAAK,OACrBC,IAAK,SAAAC,GAAG,OAAE,EAAKP,MAAMO,GACrBC,SAAUnB,KAAKC,MAAMmB,aACrBC,MAAOrB,KAAKC,MAAMqB,WAClB,4BAAQC,QAASvB,KAAKC,MAAMuB,aAA5B,qB,GAZuBf,aCCdgB,E,kDAEhB,aAAc,IAAD,8BACT,gBA0BLL,aAAa,SAACM,GACV,EAAKC,SAAS,CAACL,SAASI,EAAEE,OAAOP,SA5BvB,EA+BdG,YAAc,WACe,IAAtB,EAAKK,MAAMP,WAGd,EAAKK,SAAS,CAACzB,MAAM,CAAC,CAAC4B,MAAM,EAAKD,MAAMP,SAASjB,MAAK,IAAlC,mBAA4C,EAAKwB,MAAM3B,UAC3E,EAAKyB,SAAS,CAACL,SAAS,OApCd,EAwCbS,OAAS,SAACC,GACN,EAAKL,SAAS,CACVzB,MAAM,EAAK2B,MAAM3B,MAAMC,QAAO,SAACC,EAAK6B,GAAN,OAAcA,GAAOD,QA1C9C,EA8CbE,OAAS,SAACD,GACP,IAAIE,EAAWC,KAAKC,MAAMD,KAAKE,UAAU,EAAKT,MAAM3B,QACpDiC,EAASF,GAAO5B,MAAQ8B,EAASF,GAAO5B,KACxC,EAAKsB,SAAS,CACVzB,MAAMiC,KAlDA,EAuDb3B,YAAc,SAACH,GACX,OAAO,EAAKwB,MAAM3B,MAAMqC,KAAI,SAACC,EAAKR,GACf,GAAGQ,EAAKnC,MAAMA,EACV,OAAM,4BACF,2BAAOW,KAAK,WAAWyB,QAASpC,EAAMkB,QAAS,kBAAI,EAAKW,OAAOF,MAC/D,0BAAMU,wBAAyB,CAACC,OAAOH,EAAKV,SAC5C,4BAAQP,QAAS,kBAAI,EAAKQ,OAAOC,KAAjC,qBA3D3B,EAAKH,MAAM,CACPP,SAAS,GACTpB,MAAM,CACH,CAAC4B,MAAM,IAAIzB,MAAK,GAChB,CAACyB,MAAM,IAAIzB,MAAK,GAChB,CAACyB,MAAM,IAAIzB,MAAK,GAChB,CAACyB,MAAM,IAAIzB,MAAK,KARd,E,gEAcV,IAAIH,EAAQ0C,aAAaC,QAAQ,SAC9B3C,GACCF,KAAK2B,SAAS,CACVzB,MAAOkC,KAAKC,MAAMnC,O,2CAK1B0C,aAAaE,QACT,QACAV,KAAKE,UAAUtC,KAAK6B,MAAM3B,U,+BA2CxB,IAAD,EACkBF,KAAK6B,MAArB3B,EADF,EACEA,MAAMoB,EADR,EACQA,SACb,OACI,6BACI,kBAAC,EAAD,CAAOA,SAAUA,EAAUE,YAAaxB,KAAKwB,YAAaJ,aAAcpB,KAAKoB,eAC7E,kBAAC,EAAD,CAAMlB,MAAOA,EAAOM,YAAaR,KAAKQ,mB,GAzE7CC,aCKTsC,IAASC,OACP,kBAAC,EAAD,MACCC,SAASC,eAAe,U","file":"static/js/main.211240b3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nexport default class List extends Component {\r\n  render() {\r\n    let arr1=this.props.todos.filter((item)=>{\r\n      return item.done;\r\n    });\r\n    let arr2=this.props.todos.filter((item)=>{\r\n      return !item.done;\r\n    })\r\n    return(\r\n      <div>\r\n        <h2>正在进行{arr2.length}</h2>\r\n        <ul>\r\n          {\r\n            this.props.renderTodos(false)\r\n          }\r\n        </ul>\r\n        <h2>已经完成{arr1.length}</h2>\r\n        <ul>\r\n          {\r\n            this.props.renderTodos(true)\r\n          }\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Input extends Component {\r\n    componentDidMount(){\r\n        this.input.focus();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className = \"box\">\r\n            <label htmlFor=\"inp\">todoList</label>\r\n            <input id=\"inp\" type=\"text\" \r\n            ref={inp=>this.input=inp} \r\n            onChange={this.props.handleChange}\r\n            value={this.props.inpValue}></input>\r\n            <button onClick={this.props.handleClick}>添加</button>\r\n            </div>\r\n          \r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport List from './List';\r\nimport Input from './Input';\r\nexport default class TodoList\r\n extends Component {\r\n     constructor(){\r\n         super();\r\n         this.state={\r\n             inpValue:'',\r\n             todos:[\r\n                {title:'1',done:false},\r\n                {title:'2',done:true},\r\n                {title:'3',done:true},\r\n                {title:'4',done:false},\r\n             ]\r\n         }\r\n\r\n     }\r\n    componentDidMount(){\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    //添加\r\n    handleClick = ()=>{\r\n        if(this.state.inpValue ==''){\r\n            return;\r\n        }else{\r\n        this.setState({todos:[{title:this.state.inpValue,done:false},...this.state.todos]});\r\n        this.setState({inpValue:''});\r\n        }\r\n     }\r\n     //删除\r\n     delete = (idx)=>{\r\n         this.setState({\r\n             todos:this.state.todos.filter((item,index)=>index!=idx)\r\n         })\r\n     }\r\n     //上下切换\r\n     toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos));\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos:newTodos\r\n         })\r\n      \r\n     }\r\n\r\n     renderTodos = (done)=>{\r\n         return this.state.todos.map((todo,idx)=>{\r\n                            if(todo.done==done){\r\n                                return<li>\r\n                                    <input type=\"checkbox\" checked={done} onClick={()=>this.toggle(idx)}/>\r\n                                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                                    <button onClick={()=>this.delete(idx)}>删除</button>\r\n                                </li>\r\n                                \r\n                            }\r\n                        });\r\n                    }       \r\n    render() {\r\n        const {todos,inpValue}=this.state;\r\n        return (\r\n            <div>\r\n                <Input inpValue={inpValue} handleClick={this.handleClick} handleChange={this.handleChange} />\r\n                <List todos={todos} renderTodos={this.renderTodos} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import Context from './pages/context';\n//import Hook from './pages/Hook';\n//import HOC,{Detial} from './pages/HOC';\n//import App from './pages/App.js';\n//import Control from './components/Control';\nimport TodoList from './components/TodoList';\n\nReactDOM.render(\n  <TodoList />,\n   document.getElementById('root')\n );\n\n\n\n\n\n\n\n\n\n// const Buttons = ()=>{\n//   const btns = [1,2,3,4,5];\n//   return <div>\n//     {\n//       btns.map((item)=><button key={item}>{item}</button>)\n//     }\n//   </div>\n// }\n//展示数据\n\n    // return <ul>\n    //  {\n    //    data.map((item)=><li>{item.title}</li>)\n    //  }\n\n    // return <div>\n    //     <Buttons />\n    //     <List data={data} />\n    // </div>\n\n//智能组件\n// class Demo extends React.Component{\n//   constructor(){\n//     super();\n//     //声明状态\n//     this.state = {\n//       name:new Date().toLocaleString()\n//     }\n//     setTimeout(()=>{\n//       this.setState({name: new Date().toLocaleString()})\n//     },1000)\n//   }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name} id='任意值'/>\n//       <App title='app' id='任意值'/>\n//     </div>\n//   }\n// }\n\n//组件声明\n//函数组件\n//UI组件 展示组件 木偶组件\n// function App(props){\n//   console.log(props);\n//   const {title,id}=props;\n//   return<div>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n// ReactDOM.render(\n//   <App title=\"任意值\" />,\n//    document.getElementById('root')\n//  );\n\n//let ele = React.createElement('h1',{id:'title'},'hello react');\n//let ele = React.createElement('h1',{id:'title'},React.createElement('div',{},'hello'),'react');\n//console.log(ele);\n// let ele = <h1 id=\"title\" className=\"tit\">hello react<div>hello</div>\n// <div>当前时间</div>\n// {\n//   new Date().toLocaleString()\n// }\n// </h1>;\n\n//将 JSX对象渲染到DOM中\n// let ReactDOM = {\n//   render(eleObj,container){\n//     //解构\n//     const{type,props}=eleObj;\n//     //创建第一层节点\n//     let ele = document.createElement(type);\n//     //遍历属性对象，将属性添加到第一层节点对象上\n//     for (const prop in props) {\n//       if(prop =='children'){\n//         if(typeof props.children=='string'){\n//             const txtNode = document.createTextNode(props.children);\n//             ele.appendChild(txtNode);\n//             break;\n//         }\n//         //将第一层节点对象的子元素添加进去\n//         props.children.forEach((child)=>{\n//           if(typeof child=='string'){\n//             const txtNode = document.createTextNode(child);\n//             ele.appendChild(txtNode);\n//         }\n//           else{\n//             ReactDOM.render(child,ele);\n//           }\n//         });\n//       }\n//       else{\n//         ele[prop] = props[prop]; //ele.setAttribute('class',props[prop]);\n//       }\n//     }\n//     //将第一层DOM节点添加到container\n//     container.appendChild(ele);\n//   }\n// }\n\n\n\n\n\n\n/*\n一、\n1.原生JS，DOM操作（jQ）\n2.React：开发效率高、性能高\n3.环境搭建、创建一个项目、运行\n4.JSX语法\n*/\n/*\n二、\nalt shift +上下键   复制一行\nalt+上下键          移动一行\n按住alt，鼠标点击\nctrl+shift+左右键  选中整个单词\nctrl+shift+l \n*/"],"sourceRoot":""}